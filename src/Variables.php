<?php
//////////////////////////////////////////////////////////////////////////////
namespace AITK                                                               ;
//////////////////////////////////////////////////////////////////////////////
class Variables extends Columns                                              {
//////////////////////////////////////////////////////////////////////////////
public $Id                                                                   ;
public $Uuid                                                                 ;
public $VType                                                                ;
public $Name                                                                 ;
public $Value                                                                ;
public $Update                                                               ;
public $Found                                                                ;
//////////////////////////////////////////////////////////////////////////////
function __construct  (                                                    ) {
  ////////////////////////////////////////////////////////////////////////////
  parent::__construct (                                                    ) ;
  $this -> clear      (                                                    ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
function __destruct  (                                                     ) {
  ////////////////////////////////////////////////////////////////////////////
  unset              ( $this -> Columns                                    ) ;
  parent::__destruct (                                                     ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
public function clear (                                                    ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Id      = 0                                                       ;
  $this -> Uuid    = 0                                                       ;
  $this -> VType   = 0                                                       ;
  $this -> Name    = ""                                                      ;
  $this -> Value   = ""                                                      ;
  $this -> Update  = 0                                                       ;
  $this -> Found   = false                                                   ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
public function assign ( $Item                                             ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Id     = $Item -> Id                                              ;
  $this -> Uuid   = $Item -> Uuid                                            ;
  $this -> VType  = $Item -> VType                                           ;
  $this -> Name   = $Item -> Name                                            ;
  $this -> Value  = $Item -> Value                                           ;
  $this -> Update = $Item -> Update                                          ;
  $this -> Found  = $Item -> Found                                           ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
public function tableItems (                                               ) {
  return                   [ "id"                                            ,
                             "uuid"                                          ,
                             "type"                                          ,
                             "name"                                          ,
                             "value"                                         ,
                             "ltime"                                       ] ;
}
//////////////////////////////////////////////////////////////////////////////
public function Items      ( $S = ","                                      ) {
  ////////////////////////////////////////////////////////////////////////////
  $X = $this -> tableItems (                                               ) ;
  $L = $this -> JoinItems  ( $X , $S                                       ) ;
  unset                    ( $X                                            ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $L                                                                  ;
}
//////////////////////////////////////////////////////////////////////////////
public function ItemPair        ( $item                                    ) {
  ////////////////////////////////////////////////////////////////////////////
  $a               = strtolower ( $item                                    ) ;
  ////////////////////////////////////////////////////////////////////////////
  if                            ( "id"    == $a                            ) {
    return "`{$a}` = " . (string) $this -> Id                                ;
  }                                                                          ;
  if                            ( "uuid"  == $a                            ) {
    return "`{$a}` = " . (string) $this -> Uuid                              ;
  }                                                                          ;
  if                            ( "type"  == $a                            ) {
    return "`{$a}` = " . (string) $this -> VType                             ;
  }                                                                          ;
  if                            ( "name"  == $a                            ) {
    return "`{$a}` = '" . (string) $this -> Name . "'"                       ;
  }                                                                          ;
  if                            ( "value" == $a                            ) {
    return "`{$a}` = '" . (string) $this -> Value . "'"                      ;
  }                                                                          ;
  if                            ( "ltime" == $a                            ) {
    return "`{$a}` = " . (string) $this -> Update                            ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return ""                                                                  ;
}
//////////////////////////////////////////////////////////////////////////////
public function set ( $item , $V                                           ) {
  ////////////////////////////////////////////////////////////////////////////
  $a = strtolower   ( $item                                                ) ;
  ////////////////////////////////////////////////////////////////////////////
  if ( "id"    == $a ) $this -> Id      = $V                                 ;
  if ( "uuid"  == $a ) $this -> Uuid    = $V                                 ;
  if ( "type"  == $a ) $this -> VType   = $V                                 ;
  if ( "name"  == $a ) $this -> Name    = $V                                 ;
  if ( "value" == $a ) $this -> Value   = $V                                 ;
  if ( "ltime" == $a ) $this -> Update  = $V                                 ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
public function get ( $item                                                ) {
  ////////////////////////////////////////////////////////////////////////////
  $a = strtolower   ( $item                                                ) ;
  ////////////////////////////////////////////////////////////////////////////
  if ( "id"    == $a ) return $this -> Id                                    ;
  if ( "uuid"  == $a ) return $this -> Uuid                                  ;
  if ( "type"  == $a ) return $this -> VType                                 ;
  if ( "name"  == $a ) return $this -> Name                                  ;
  if ( "value" == $a ) return $this -> Value                                 ;
  if ( "ltime" == $a ) return $this -> Update                                ;
  ////////////////////////////////////////////////////////////////////////////
  return ""                                                                  ;
}
//////////////////////////////////////////////////////////////////////////////
public function setIndex ( $UUID , $VTYPE , $NAME                          ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Uuid  = $UUID                                                     ;
  $this -> VType = $VTYPE                                                    ;
  $this -> Name  = $NAME                                                     ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
public function Select      ( $Table                                         ,
                              $Options = "order by `id` asc"                 ,
                              $Limits  = ""                                ) {
  ////////////////////////////////////////////////////////////////////////////
  $L = $this -> tableItems  (                                              ) ;
  $Q = $this -> SelectItems ( $Table , $L , $Options , $Limits             ) ;
  unset                     ( $L                                           ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $Q                                                                  ;
}
//////////////////////////////////////////////////////////////////////////////
public function Obtain     ( $R                                            ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Id     = intval ( $R [ "id"                              ] , 10 ) ;
  $this -> Uuid   = intval ( $R [ "uuid"                            ] , 10 ) ;
  $this -> VType  = intval ( $R [ "type"                            ] , 10 ) ;
  $this -> Name   = (string) $R [ "name"                                   ] ;
  $this -> Value  = (string) $R [ "value"                                  ] ;
  $this -> Update =          $R [ "ltime"                                  ] ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
public function Delete ( $TABLE                                            ) {
  ////////////////////////////////////////////////////////////////////////////
  $U = $this -> Uuid                                                         ;
  $T = $this -> VType                                                        ;
  $N = $this -> VType                                                        ;
  ////////////////////////////////////////////////////////////////////////////
  return "delete from {$TABLE}"                                              .
         " where ( `uuid` = {$U} )"                                          .
           " and ( `type` = {$T} )"                                          .
           " and ( `name` = '{$N}' ) ;"                                      ;
}
//////////////////////////////////////////////////////////////////////////////
public function Insert  ( $DB , $TABLE                                     ) {
  ////////////////////////////////////////////////////////////////////////////
  $U   = $this -> Uuid                                                       ;
  $T   = $this -> VType                                                      ;
  $N   = $this -> Name                                                       ;
  $V   = $this -> Value                                                      ;
  ////////////////////////////////////////////////////////////////////////////
  $QQ  = "insert into {$TABLE} "                                             .
         "(`uuid`,`type`,`name`,`value`) values "                            .
         "( {$U} , {$T} , ? , ? ) ;"                                         ;
  ////////////////////////////////////////////////////////////////////////////
  $qq  = $DB -> Prepare ( $QQ                                              ) ;
  $qq -> bind_param     ( 'ss' , $N , $V                                   ) ;
  $rt  = $qq -> execute (                                                  ) ;
  $qq -> close          (                                                  ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $rt                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
public function obtainValue   ( $DB , $TABLE                               ) {
  ////////////////////////////////////////////////////////////////////////////
  $U     = $this -> Uuid                                                     ;
  $T     = $this -> VType                                                    ;
  $N     = $this -> Name                                                     ;
  $this -> Found = false                                                     ;
  ////////////////////////////////////////////////////////////////////////////
  $QQ    = "select `value` from {$TABLE}"                                    .
           " where ( `uuid` = {$U} )"                                        .
             " and ( `type` = {$T} )"                                        .
             " and ( `name` = ? ) ;"                                         ;
  ////////////////////////////////////////////////////////////////////////////
  $qq    = $DB -> Prepare     ( $QQ                                        ) ;
  $qq   -> bind_param         ( 's' , $N                                   ) ;
  $qq   -> execute            (                                            ) ;
  ////////////////////////////////////////////////////////////////////////////
  $kk    = $qq -> get_result  (                                            ) ;
  ////////////////////////////////////////////////////////////////////////////
  if ( ! $DB -> hasResult ( $kk ) ) return ""                                ;
  $rr    = $kk -> fetch_array ( MYSQLI_BOTH                                ) ;
  ////////////////////////////////////////////////////////////////////////////
  $this -> Found = true                                                      ;
  ////////////////////////////////////////////////////////////////////////////
  return $rr                  [ 0                                          ] ;
}
//////////////////////////////////////////////////////////////////////////////
public function UpdateValue ( $DB , $TABLE , $VALUE                        ) {
  ////////////////////////////////////////////////////////////////////////////
  $U     = $this -> Uuid                                                     ;
  $T     = $this -> VType                                                    ;
  $N     = $this -> Name                                                     ;
  $this -> Value = $VALUE                                                    ;
  ////////////////////////////////////////////////////////////////////////////
  $QQ    = "update {$TABLE} "                                                .
           " set `value` = ?"                                                .
           " where ( `uuid` = {$U} )"                                        .
             " and ( `type` = {$T} )"                                        .
             " and ( `name` = ? ) ;"                                         ;
  ////////////////////////////////////////////////////////////////////////////
  $qq    = $DB -> Prepare   ( $QQ                                          ) ;
  $qq   -> bind_param       ( 'ss' , $VALUE , $N                           ) ;
  $rt    = $qq -> execute   (                                              ) ;
  $qq   -> close            (                                              ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $rt                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
public function Assure       ( $DB , $TABLE , $VALUE                       ) {
  ////////////////////////////////////////////////////////////////////////////
  $U     = $this -> Uuid                                                     ;
  $T     = $this -> VType                                                    ;
  $N     = $this -> Name                                                     ;
  $this -> Value = $VALUE                                                    ;
  ////////////////////////////////////////////////////////////////////////////
  $QQ    = "select `id` from {$TABLE}"                                       .
           " where ( `uuid` = {$U} )"                                        .
             " and ( `type` = {$T} )"                                        .
             " and ( `name` = ? ) ;"                                         ;
  ////////////////////////////////////////////////////////////////////////////
  $qq    = $DB -> Prepare    ( $QQ                                         ) ;
  $qq   -> bind_param        ( 's' , $N                                    ) ;
  $qq   -> execute           (                                             ) ;
  $kk    = $qq -> get_result (                                             ) ;
  ////////////////////////////////////////////////////////////////////////////
  if                         ( $DB -> hasResult ( $kk )                    ) {
    //////////////////////////////////////////////////////////////////////////
    $rr = $kk -> fetch_array ( MYSQLI_BOTH                                 ) ;
    $ID = $rr                [ 0                                           ] ;
    //////////////////////////////////////////////////////////////////////////
    $QQ = "update {$TABLE}"                                                  .
          " set `value` = ?"                                                 .
           " where ( `id` = {$ID} ) ;"                                       ;
    //////////////////////////////////////////////////////////////////////////
    $qq  = $DB -> Prepare    ( $QQ                                         ) ;
    $qq -> bind_param        ( 's' , $VALUE                                ) ;
    //////////////////////////////////////////////////////////////////////////
    $rt  = $qq -> execute    (                                             ) ;
    $qq -> close             (                                             ) ;
    //////////////////////////////////////////////////////////////////////////
    return $rt                                                               ;
    //////////////////////////////////////////////////////////////////////////
  } else                                                                     {
    //////////////////////////////////////////////////////////////////////////
    $QQ = "insert into {$TABLE}"                                             .
          " (`uuid`,`type`,`name`,`value`)"                                  .
          " values ({$U},{$T},?,?) ;"                                        ;
    //////////////////////////////////////////////////////////////////////////
    $qq   = $DB -> Prepare   ( $QQ                                         ) ;
    $qq  -> bind_param       ( 'ss' , $N , $VALUE                          ) ;
    //////////////////////////////////////////////////////////////////////////
    $rt  = $qq -> execute    (                                             ) ;
    $qq -> close             (                                             ) ;
    //////////////////////////////////////////////////////////////////////////
    return $rt                                                               ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
?>
