<?php
//////////////////////////////////////////////////////////////////////////////
// AITK介面元件
//////////////////////////////////////////////////////////////////////////////
namespace AITK                                                               ;
//////////////////////////////////////////////////////////////////////////////
class UI                                                                     {
//////////////////////////////////////////////////////////////////////////////
public static function GetPathInfos ( )                                      {
  ////////////////////////////////////////////////////////////////////////////
  if ( ! isset ( $_SERVER['PATH_INFO'] ) ) return array ( )                  ;
  ////////////////////////////////////////////////////////////////////////////
  $PIFS  = explode ( "/" , $_SERVER['PATH_INFO']                           ) ;
  ////////////////////////////////////////////////////////////////////////////
  $ID    = 0                                                                 ;
  $LISTs = array   (                                                       ) ;
  ////////////////////////////////////////////////////////////////////////////
  foreach          ( $PIFS as $p                                           ) {
    if             ( $ID == 0                                              ) {
      if           ( strlen ( $p ) > 0                                     ) {
        array_push ( $LISTs , $p                                           ) ;
      }                                                                      ;
    } else                                                                   {
      array_push   ( $LISTs , $p                                           ) ;
    }                                                                        ;
    $ID  = $ID + 1                                                           ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $LISTs                                                              ;
}
//////////////////////////////////////////////////////////////////////////////
public static function CallAnyFunction ( $DB , $HH , $AA                   ) {
  ////////////////////////////////////////////////////////////////////////////
  $AA [ "Answer" ] = "No"                                                    ;
  ////////////////////////////////////////////////////////////////////////////
  $FX     = $HH -> Parameter ( "Function"                                  ) ;
  ////////////////////////////////////////////////////////////////////////////
  if                         ( strpos ( $FX , "::" ) !== false             ) {
    $FL   = explode          ( "::" , $FX                                  ) ;
    if                       ( method_exists ( $FL [ 0 ] , $FL [ 1 ] )     ) {
      $AA = $FX              ( $DB , $HH , $AA                             ) ;
    }                                                                        ;
  } else
  ////////////////////////////////////////////////////////////////////////////
  if                         ( strlen ( $FX ) > 0                          ) {
    if                       ( function_exists ( $FX )                     ) {
      $AA = $FX              ( $DB , $HH , $AA                             ) ;
    }                                                                        ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $AA                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
public static function CallAnyMethod ( $DB , $HH , $AA                     ) {
  ////////////////////////////////////////////////////////////////////////////
  $METHOD = $HH -> Parameter         ( "Method"                            ) ;
  ////////////////////////////////////////////////////////////////////////////
  switch                             ( $METHOD                             ) {
    //////////////////////////////////////////////////////////////////////////
    // 動態函數進入點
    //////////////////////////////////////////////////////////////////////////
    case "Function"                                                          :
      ////////////////////////////////////////////////////////////////////////
      $AA = self::CallAnyFunction    ( $DB , $HH , $AA                     ) ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
    default                                                                  :
      ////////////////////////////////////////////////////////////////////////
      $AA [ "Problem" ] = "No method"                                        ;
      $AA [ "Answer"  ] = "No"                                               ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $AA                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
public static function RequestHostRPC ( $URL , $HEADERS , $POSTING         ) {
  ////////////////////////////////////////////////////////////////////////////
  $JXON = json_encode ( $POSTING                                           ) ;
  $JLEN = strlen      ( $JXON                                              ) ;
  ////////////////////////////////////////////////////////////////////////////
  $PASS = $HEADERS                                                           ;
  array_push          ( $PASS , "Content-Length: {$JLEN}"                  ) ;
  ////////////////////////////////////////////////////////////////////////////
  $ch   = curl_init   (                                                    ) ;
  curl_setopt         ( $ch , CURLOPT_URL            , $URL                ) ;
  curl_setopt         ( $ch , CURLOPT_CUSTOMREQUEST  , "POST"              ) ;
  curl_setopt         ( $ch , CURLOPT_POSTFIELDS     , $JXON               ) ;
  curl_setopt         ( $ch , CURLOPT_RETURNTRANSFER , true                ) ;
  curl_setopt         ( $ch , CURLOPT_HEADER         , false               ) ;
  curl_setopt         ( $ch , CURLOPT_HTTPHEADER     , $PASS               ) ;
  curl_setopt         ( $ch , CURLOPT_SSL_VERIFYHOST , false               ) ;
  curl_setopt         ( $ch , CURLOPT_SSL_VERIFYPEER , false               ) ;
  $RR  = curl_exec    ( $ch                                                ) ;
         curl_close   ( $ch                                                ) ;
  $RR  = str_replace  ( "'" , '"' , $RR                                    ) ;
  ////////////////////////////////////////////////////////////////////////////
  return json_decode  ( $RR  , true                                        ) ;
}
//////////////////////////////////////////////////////////////////////////////
public static function SendHostRPC      ( $CONF , $CMD , $POSTING          ) {
  ////////////////////////////////////////////////////////////////////////////
  $HOSTNAME = $CONF [ "Hostname" ]                                           ;
  $USERNAME = $CONF [ "Username" ]                                           ;
  $PASSWORD = $CONF [ "Password" ]                                           ;
  ////////////////////////////////////////////////////////////////////////////
  $URL      = "{$HOSTNAME}/{$CMD}"                                           ;
  $HEADERS  = array                                                          (
    "Username: {$USERNAME}"                                                  ,
    "Password: {$PASSWORD}"                                                  ,
    "Content-Type: application/json"                                         ,
    "Accept: application/json"                                               ,
  )                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return self::RequestHostRPC           ( $URL , $HEADERS , $POSTING       ) ;
}
//////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
?>
